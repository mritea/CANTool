package CanTool;

import serialException.TooManyListeners;
import serialPort.SerialTool;
import gnu.io.SerialPort;

public class CanTool {
	private SerialPort port; 
	private boolean flag;
	private int speed;
	
	public CanTool(SerialPort serialport){
		this.port=serialport;
		flag=false;
		speed=10;
	}
	
	public void addListener(SerialListener listener){
		try{
			SerialTool.addListener(port, listener);
			System.out.println("监听成功");
		}catch(TooManyListeners e){
			e.printStackTrace();
		}
	}
	
	public void getCommand(byte[] bytes){

		String command=new String(bytes);
	      char c=command[0];
	      if(c=='O'&& command[1]=='1'){
	        if(checklength(c,command.length())){        //处理命令长度错误 
	          open_s();
	        }
	      }else if(c=='V'){
	        if(checklength(c,command.length())){        //处理命令长度错误 
	          Serial.println("SV2.5-HV2.0");
	        }
	      }else if(c=='C'){
	        if(checklength(c,command.length())){        //处理命令长度错误 
	          close_s();
	        }
	      }else if(c=='S'){ 
	        if(checklength(c,command.length())){        //处理命令长度错误 
	          Changespeed(command[1]);
	        }
	      }else if(c=='t' && busy){
	        Sendstandardframe(command);
	      }else if(c=='T' && busy){
	        Sendexternalframe(command);
	      }else{
	        fail();
	      }
	  }
	
	
	public void open_s(){
	  if(!flag){
	    flag=true;
	    //返回成功
	    success();
	    return;
	  }
	  fail();
	}
	
	public void close_s(){
	  if(flag){
	    flag=false;
	    //返回成功
	    success();
	    return;
	  }
	  fail();
	}
	
	public void Changespeed(char NO_speed){
	//  Serial.println(NO_speed);
	   if(flag){
	    int num[]={10,20,50,100,125,250,500,800,1000};
	    if(NO_speed<'0' || NO_speed>'8'){//返回错误
	      fail();
	    }else{
	      int pos_speed=(int)(NO_speed-'0');
	      S_speed=num[pos_speed];
	      //返回成功
	      success();
	    }
	  }else{
	    fail();
	  }
	}
	

}
